version: 2

references:
  container_config: &container_config
    docker:
      - image: aeternity/infrastructure:master
    working_directory: /infrastructure
    environment:
      DOCKERHUB_REPO: aeternity/infrastructure

  machine_config: &machine_config
    machine:
      docker_layer_caching: true
    working_directory: /home/circleci/infrastructure
    environment:
      DOCKERHUB_REPO: aeternity/infrastructure

  pull_current_image: &pull_current_image
    run:
      name: Pull current branch Docker image
      command: |
        docker pull ${DOCKERHUB_REPO:?}:${CIRCLE_BRANCH:?}

  setup_infra: &setup_infra
    run:
      name: Setup infrastructure
      command: make setup-infrastructure

  setup_node: &setup_node
    run:
      name: Setup node
      command: make setup-node

  setup_monitoring: &setup_monitoring
    run:
      name: Install monitoring tools
      command: make setup-monitoring

  build_images: &build_images
    run:
      name: Build images
      command: make images

jobs:
  build_check:
    <<: *machine_config
    steps:
      - checkout
      - run:
          name: Build and push Docker image to DockerHub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t ${DOCKERHUB_REPO:?}:${CIRCLE_BRANCH:?} .
            docker push ${DOCKERHUB_REPO:?}:${CIRCLE_BRANCH:?}
      - run:
          name: Configuration lint
          command: .circleci/docker-run.sh make lint
      - run:
          name: Dry run OpenStack heat template
          command: .circleci/docker-run.sh make test-openstack
      - run:
          name: Dry run environments playbooks
          command: .circleci/docker-run.sh make test-setup-environments

  setup_uat:
    <<: *container_config
    environment:
      - DEPLOY_ENV: uat
    steps:
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_integration:
    <<: *container_config
    environment:
      - DEPLOY_ENV: integration
    steps:
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_fast_integration:
    <<: *container_config
    environment:
      - DEPLOY_ENV: fast_integration
    steps:
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_dev1:
    <<: *container_config
    environment:
      - DEPLOY_ENV: dev1
    steps:
      - *setup_infra
      - *setup_node

  setup_dev2:
    <<: *container_config
    environment:
      - DEPLOY_ENV: dev2
    steps:
      - *setup_infra
      - *setup_node

  build_images:
    <<: *container_config
    steps:
      - *build_images

  docker_push_latest:
    <<: *machine_config
    steps:
      - *pull_current_image
      - run:
          name: Tag and push Docker "latest" image to DockerHub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag ${DOCKERHUB_REPO:?}:${CIRCLE_BRANCH:?} ${DOCKERHUB_REPO:?}:latest
            docker push ${DOCKERHUB_REPO:?}:latest

workflows:
  version: 2
  check_deploy:
    jobs:
      - build_check:
          requires: []
          filters:
            branches:
              ignore:
                - packer

      - setup_uat:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - setup_integration:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - setup_fast_integration:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - setup_dev1:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - setup_dev2:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - docker_push_latest:
          requires:
            - build_check
          filters:
            branches:
              only: master

      - build_images:
          filters:
            branches:
              only: packer

  daily_deploy:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - setup_uat
      - setup_integration
      - setup_fast_integration
      - setup_dev1
      - setup_dev2
