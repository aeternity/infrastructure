version: 2

references:
  container_config: &container_config
    setup_remote_docker:
      docker_layer_caching: true
    docker:
      - image: aeternity/builder:ci-build-add-terraform
        user: builder
    working_directory: ~/infrastructure

  venv_cache_key: &venv_cache_key v6-venv-cache-{{ checksum "requirements.txt" }}
  restore_venv: &restore_venv
    restore_cache:
      key: *venv_cache_key

  roles_cache_key: &roles_cache_key v3-ansible-roles-{{ checksum "ansible/requirements.yml" }}
  restore_roles: &restore_roles
    restore_cache:
      key: *roles_cache_key

  install_pip: &install_pip
    run:
      name: Install PIP dependancies
      command: make pip

  activate_venv: &activate_venv
    run:
      name: Activate python virtual environment
      command: |
        source ~/infrastructure/.venv/py3/bin/activate
        echo "source ~/infrastructure/.venv/py3/bin/activate" >> $BASH_ENV

  setup_infra: &setup_infra
    run:
      name: Setup infrastructure
      command: make setup-infrastructure

  setup_node: &setup_node
    run:
      name: Setup node
      command: make setup-node

  setup_monitoring: &setup_monitoring
    run:
      name: Install monitoring tools
      command: make setup-monitoring

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - *restore_venv
      - run:
          name: Create python virtual environment
          command: |
            virtualenv -p python3 .venv/py3
      - *activate_venv
      - *install_pip
      - save_cache:
          key: *venv_cache_key
          paths:
            - ~/.venv/py3
            - ~/.cache/pip
      - run:
          name: Install ansible roles
          command: |
            make ansible/roles
      - save_cache:
          key: *roles_cache_key
          paths:
            ansible/roles

  check:
    <<: *container_config
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *install_pip
      - run:
          name: Configuration lint
          command: make lint
      - run:
          name: Dry run OpenStack heat template
          command: make test-openstack
      - run:
          name: Dry run environments playbooks
          command: make test-setup-environments

  setup_uat:
    <<: *container_config
    environment:
      - DEPLOY_ENV: uat
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *restore_roles
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_integration:
    <<: *container_config
    environment:
      - DEPLOY_ENV: integration
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *restore_roles
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_fast_integration:
    <<: *container_config
    environment:
      - DEPLOY_ENV: fast_integration
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *restore_roles
      - *setup_infra
      - *setup_node
      - *setup_monitoring

  setup_dev1:
    <<: *container_config
    environment:
      - DEPLOY_ENV: dev1
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *restore_roles
      - *setup_infra
      - *setup_node

  setup_dev2:
    <<: *container_config
    environment:
      - DEPLOY_ENV: dev2
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *restore_roles
      - *setup_infra
      - *setup_node

  build_images:
    <<: *container_config
    steps:
      - checkout
      - *restore_venv
      - *activate_venv
      - *install_pip
      - run:
          name: Build images
          command: make images

workflows:
  version: 2
  check_deploy:
    jobs:
      - build:
          requires: []
          filters:
            branches:
              ignore:
                - packer

      - check:
          requires:
            - build
          filters:
            branches:
              ignore:
                - packer

      - setup_uat:
          requires:
            - check
          filters:
            branches:
              only: master

      - setup_integration:
          requires:
            - check
          filters:
            branches:
              only: master

      - setup_fast_integration:
          requires:
            - check
          filters:
            branches:
              only: master

      - setup_dev1:
          requires:
            - check
          filters:
            branches:
              only: master

      - setup_dev2:
          requires:
            - check
          filters:
            branches:
              only: master

      - build_images:
          filters:
            branches:
              only: packer

  daily_deploy:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - setup_uat
      - setup_integration
      - setup_fast_integration
      - setup_dev1
      - setup_dev2
