---
# Playbook used to download mnesia snapshoot for env from S3 and restore it to give node

- name: Backup, archive and download Mnesia database
  hosts: all
  remote_user: aeternity

  tasks:
    - name: Include configuration variables
      include_vars: vars/snapshot.yml

    - name: "Load a variable files for environment: {{ env }}"
      include_vars: "{{ item }}"
      with_first_found:
        - "../vars/aeternity/{{ env }}.yml"
      tags: [config, node_config]

    - name: Download backup to S3 bucket latest
      aws_s3:
        bucket: "{{ backup_bucket }}"
        object: "{{ backup_archive_filename_latest }}"
        dest: /tmp/{{ backup_archive_filename_latest }}
        mode: get

    - name: Stop node
      command: "/bin/true"
      changed_when: true
      notify: "stop aeternity daemon"

    - meta: flush_handlers

    - name: Restore Mnesia database
      unarchive:
        remote_src: yes
        src: /tmp/{{ backup_archive_filename_latest }}
        dest: "{{ additional_storage_mountpoint if additional_storage is defined and additional_storage else project_root }}/"

    - name: Remove Mnesia backups
      file:
        path:  "{{ item }}"
        state: absent
      loop:
        - /tmp/backup
        - /tmp/{{ backup_archive_filename_latest }}

    - name: Start node
      command: "/bin/true"
      changed_when: true
      notify: "start aeternity daemon"

  handlers:
  - import_tasks: tasks/handlers.yml
