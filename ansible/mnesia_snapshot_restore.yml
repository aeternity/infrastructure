---
# Playbook used to download mnesia snapshot for env from S3 and restore it to give node

- name: Backup, archive and download Mnesia database
  hosts: all
  remote_user: aeternity

  vars:
    snapshot_path: "{{ snapshots_dir|default('/tmp/snapshots') }}/{{ restore_snapshot_filename|mandatory }}"
    restore_dir: "{{ additional_storage_mountpoint|default(project_root) }}"

  tasks:
    - name: Include configuration variables
      include_vars: vars/snapshot.yml

    - name: "Load a variable files for environment: {{ env }}"
      include_vars: "{{ item }}"
      with_first_found:
        - "../vars/aeternity/{{ env }}.yml"
      tags: [config, node_config]

    - name: Ensure Mnesia snapshots dir exists ({{ snapshots_dir }})
      file:
        path: "{{ snapshots_dir }}"
        state: directory

    - name: Download Mnesia snapshot {{ restore_snapshot_filename }}
      aws_s3:
        bucket: "{{ snapshots_bucket }}"
        object: "{{ restore_snapshot_filename }}"
        dest: "{{ snapshot_path }}"
        mode: get

    - name: Stop node
      command: "/bin/true"
      changed_when: true
      notify: "stop aeternity daemon"

    - meta: flush_handlers

    - name: Restore Mnesia database to {{ restore_dir }}/
      unarchive:
        remote_src: yes
        src: "{{ snapshot_path }}"
        dest: "{{ restore_dir }}/"

    - name: Delete local Mnesia snapshots ({{ snapshots_dir }})
      file:
        path: "{{ snapshots_dir }}"
        state: absent

    - name: Start node
      command: "/bin/true"
      changed_when: true
      notify: "start aeternity daemon"

  handlers:
  - import_tasks: tasks/handlers.yml
