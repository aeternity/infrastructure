---
- name: Manage epoch nodes
  hosts: all
  remote_user: epoch
  vars:
    project_root: "{{ ansible_env.HOME }}/node"
    epoch_action: "{{ cmd | default('none') }}"
  tasks:
  - name: Checking if the input in correct
    debug:
      msg: "Incorrect input! You must input either 'start', 'stop', 'restart' or 'ping'"
    changed_when: false
    when: epoch_action != "start" and epoch_action != "stop" and epoch_action != "restart" and epoch_action != "ping"

  - name: Check if epoch binary exists
    stat:
      path: "{{ project_root }}/bin/epoch"
    register: epoch
    changed_when: false
    failed_when: epoch.stat.exists != True

  - name: Checking the epoch daemon state
    command: "{{ project_root }}/bin/epoch ping"
    failed_when: no
    register: ping
    changed_when: false
    when: epoch.stat.exists == True
    
  - name: Analysing epoch state
    debug:
      msg: "Epoch daemon is not running!"
    when: epoch.stat.exists == True and not ping.stdout == "pong" and epoch_action == "ping"
    
  - name: Confirming epoch state
    debug:
      msg: "Epoch daemon is running!"
    when: epoch.stat.exists == True and ping.stdout == "pong" and epoch_action == "ping"
    
  - name: Analysing input command
    set_fact:
      epoch_action: start
    when: epoch.stat.exists == True and not ping.stdout == "pong" and epoch_action == "restart"
    
  - name: Starting the epoch deamon
    command: "{{ project_root }}/bin/epoch start"
    when: epoch.stat.exists == True and not ping.stdout == "pong" and epoch_action == "start"

  - name: Stopping the epoch deamon
    command: "{{ project_root }}/bin/epoch stop"
    when: epoch.stat.exists == True and ping.stdout == "pong" and epoch_action == "stop"

  - name: Restarting the running epoch deamon
    command: "{{ project_root }}/bin/epoch restart"
    when: epoch.stat.exists == True and ping.stdout == "pong" and epoch_action == "restart"
