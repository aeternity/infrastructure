---
- name: Manage aeternity nodes
  hosts: all
  remote_user: aeternity

  vars:
    aeternity_bin: "{{ ansible_env.HOME }}/node/bin/aeternity"
    aeternity_action: "{{ cmd | default('ping') }}"
    node_running: false

  tasks:
    - name: Fail on unsupported command
      ansible.builtin.fail:
        msg: "Invalid command. Supported commands are: ping, start, stop, restart, status"
      when:
        - aeternity_action != "ping"
        - aeternity_action != "start"
        - aeternity_action != "stop"
        - aeternity_action != "restart"
        - aeternity_action != "status"
      connection: local

    - name: Aeternity binary exists
      ansible.builtin.stat:
        path: "{{ aeternity_bin }}"
      register: ae_node
      changed_when: false
      failed_when: ae_node.stat.exists != True

    - name: Ping aeternity daemon
      ansible.builtin.command: "{{ aeternity_bin }} ping"
      register: ping
      failed_when: false
      changed_when: false
      when: ae_node.stat.exists == True

    - name: Register running aeternity daemon
      ansible.builtin.set_fact:
        node_running: true
      when: ping.stdout == "pong"

    - name: Fail if not running
      ansible.builtin.fail:
        msg: "Ping failed"
      when:
        - not node_running
        - aeternity_action == "ping"

    - name: Start aeternity deamon
      ansible.builtin.command: "{{ aeternity_bin }} start"
      when:
        - not node_running
        - aeternity_action == "start" or aeternity_action == "restart"

    - name: Stop aeternity deamon
      ansible.builtin.command: "{{ aeternity_bin }} stop"
      when:
        - node_running
        - aeternity_action == "stop"

    - name: Restart aeternity deamon
      ansible.builtin.command: "{{ aeternity_bin }} restart"
      when:
        - node_running
        - aeternity_action == "restart"

    - name: Dump node status
      when:
        - node_running
        - aeternity_action == "status"
      block:
        - name: Get node status
          ansible.builtin.uri:
            url: "http://localhost:3013/v3/status"
          register: status
        - name: Debug
          ansible.builtin.debug:
            var: status.json

  post_tasks:
    - name: Prepare health checks
      ansible.builtin.include_tasks: tasks/health_check.yml
      when: aeternity_action != "stop"
