---
- name: Configure node servers
  hosts: all
  remote_user: master
  become: yes

  vars:
    project_user: aeternity
    vault_version: "0.11.3"
    libsodium_version: "1.0.16"
    libsodium_module_version: "23.1.0"
    fail2ban_loglevel: INFO
    fail2ban_bantime: 86400
    fail2ban_maxretry: 3
    fail2ban_logtarget: SYSLOG
    fail2ban_action: action_
    fail2ban_services:
      - name: ssh
        port: ssh
        filter: sshd
        logpath: /var/log/auth.log

  tasks:
    - name: Create aeternity daemon user
      user:
        name: "{{ project_user }}"
        shell: /bin/bash
      tags:
        - project-user

    - name: Create master user
      user:
        name: master
        shell: /bin/bash
      tags:
        - master-user

    - name: Disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present
      tags:
        - root-user
      notify: restart ssh

    - name: Download Vault public key
      get_url:
        url: "{{ vault_addr }}/v1/ssh/public_key"
        dest: /etc/ssh/trusted-user-ca-keys.pem
      when: vault_addr is defined
      tags:
        - ssh-keys
        - developer-ssh-keys
      notify: restart ssh

    - name: Setup trusted CA in sshd config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^TrustedUserCAKeys'
        line: 'TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem'
      when: vault_addr is defined
      tags:
        - ssh-keys
        - developer-ssh-keys
      notify: restart ssh

    - name: Install software-properties-common
      apt:
        state: present
        update_cache: yes
        pkg:
        - software-properties-common

    - name: Add repository with python 3.0
      apt_repository:
        repo: ppa:deadsnakes/ppa
        codename: bionic

    - name: Install dev tools
      apt:
        state: present
        update_cache: yes
        pkg:
        - build-essential
        - python3.8
        - python3.8-distutils
        - python3-yaml #aeternity.fact
        - libssl-dev
        - jq
        - unzip
        - bc
        - curl
        - zstd
      tags:
        - dev-tools

    - name: Download get-pip
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py

    - name: Install pip
      command: python3.8 /tmp/get-pip.py
      changed_when: false

    - name: Install pip tools
      pip:
        executable: pip3
        # Don't use specific versions for some packages because that versions might be not available on all distros
        # like some 18.04 packages are not available on 16.04
        # as this should target the same versions as in requirements.txt it's not feasable to use older versions
        name:
        - ansible==2.10.7
        - awscli==1.19.45
        - boto==2.49.0
        - boto3==1.17.45
        - datadog==0.28.0
        - hvac==0.6.4
      tags:
        - dev-tools

    - name: Create Vault source directory
      file:
        path: /usr/src/vault-{{ vault_version }}/
        state: directory
      tags:
        - vault-install

    - name: Download and unarchive Vault binary
      unarchive:
        src: "https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip"
        dest: /usr/src/vault-{{ vault_version }}/
        creates: /usr/src/vault-{{ vault_version }}/vault
        remote_src: true
      tags:
        - vault-install

    - name: Install Vault binary
      copy:
        src: /usr/src/vault-{{ vault_version }}/vault
        dest: /usr/bin/vault
        mode: 0755
        remote_src: true
      tags:
        - vault-install

    - name: "Create custom fact directory"
      file:
        path: "/etc/ansible/facts.d"
        state: "directory"
      tags:
        - ansible-facts

    - name: "Install aeternity.fact file"
      copy:
        src: files/aeternity.fact
        dest: /etc/ansible/facts.d/aeternity.fact
        mode: 0755
      tags:
        - ansible-facts

    - name: Increase ulimit
      pam_limits:
        domain: "{{ project_user }}"
        limit_type: soft
        limit_item: nofile
        value: 24576

    - name: Include task to install Ubuntu {{ ansible_distribution_version }} dependencies
      include_tasks: tasks/{{ ansible_distribution | lower }}_{{ ansible_distribution_release | lower }}.yml
      tags: vars

    - name: Attach additional drive if needed
      include_tasks: tasks/additional_storage.yml

  handlers:
    - name: Run ldconfig
      command: ldconfig
      listen: run ldconfig

    - name: Restart ssh
      service:
        name: ssh
        state: restarted
      listen: restart ssh

  roles:
    - { role: jasonheecs.ubuntu-fail2ban }
