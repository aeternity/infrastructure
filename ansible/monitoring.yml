- name: Configure health check services (goss)
  hosts: all
  remote_user: master
  become: true
  vars:
    project_user: aeternity
    goss_version: "0.3.6"

  tasks:
    - name: Create Goss source directory
      ansible.builtin.file:
        path: /usr/src/goss-{{ goss_version }}/
        state: directory
      tags:
        - goss-install

    - name: Download and unarchive Goss binary
      ansible.builtin.get_url:
        url: "https://github.com/aelsabbahy/goss/releases/download/v{{ goss_version }}/goss-linux-amd64"
        dest: /usr/src/goss-{{ goss_version }}/goss
      tags:
        - goss-install

    - name: Install Goss binary
      ansible.builtin.copy:
        src: /usr/src/goss-{{ goss_version }}/goss
        dest: /usr/bin/goss
        mode: '0755'
        remote_src: true
      tags:
        - goss-install

    - name: Create Goss config directory
      ansible.builtin.file:
        path: /etc/goss/
        state: directory
      notify: restart goss
      tags:
        - goss-install

    - name: Check is systemd enabled
      ansible.builtin.stat:
        path: /run/systemd/system
      register: systemd_run_dir
      tags:
        - goss-install

    - name: Copy systemd goss config
      ansible.builtin.copy:
        src: files/goss/goss.service
        dest: "/etc/systemd/system"
        mode: '0640'
      notify: reload systemd
      when: systemd_run_dir.stat.exists and systemd_run_dir.stat.isdir
      tags:
        - goss-install

    - name: Enable goss systemd service start on boot
      ansible.builtin.systemd:
        name: goss
        enabled: true
      notify: reload systemd
      when: systemd_run_dir.stat.exists and systemd_run_dir.stat.isdir
      tags:
        - goss-install

    - name: Copy init.d goss config
      ansible.builtin.copy:
        src: files/goss/goss.conf
        dest: "/etc/init.d/goss"
        mode: '0750'
      notify: restart goss
      when: not systemd_run_dir.stat.exists
      tags:
        - goss-install

    - name: Set goss.log correct permissions for goss
      ansible.builtin.file:
        path: /var/log/goss.log
        state: touch
        mode: '0640'
        owner: "{{ project_user }}"
        modification_time: "preserve"
        access_time: "preserve"
      notify: restart goss
      tags:
        - goss-install

    - name: Copy test files
      ansible.builtin.copy:
        directory_mode: true
        src: ../test/goss/local/
        dest: "/etc/goss/"
      notify: restart goss
      tags:
        - goss-install

    - name: Copy health check script
      ansible.builtin.copy:
        src: ../scripts/health_check.sh
        dest: "/etc/goss/"
        mode: '0755'
      notify: restart goss
      tags:
        - goss-install

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
      listen:
        - reload systemd
      notify: restart goss
      tags:
        - goss-install

    - name: Restart goss
      ansible.builtin.service:
        name: goss
        state: restarted
        use: service_mgr|default(ansible_service_mgr)
      listen:
        - restart goss
      tags:
        - goss-install

- name: Configure monitoring services (Rsyslog)
  hosts: all
  remote_user: master
  become: true
  gather_facts: false
  tags: [rsyslog]

  vars:
    fail2ban_enable: true

  post_tasks:
    - name: Check is systemd enabled
      ansible.builtin.stat:
        path: /run/systemd/system
      register: systemd_run_dir
    - name: Install rsyslog
      ansible.builtin.apt:
        state: present
        update_cache: true
        pkg:
          - rsyslog
    - name: Copy fail2ban.conf to rsyslog
      ansible.builtin.copy:
        src: files/rsyslog/fail2ban.conf
        dest: /etc/rsyslog.d/49-fail2ban.conf
        mode: '0600'
      notify: restart rsyslogd
    - name: Copy fail2ban.conf to logrotate
      ansible.builtin.copy:
        src: files/logrotate/fail2ban
        dest: /etc/logrotate.d/fail2ban
        mode: '0600'
    - name: Set fail2ban.log correct permissions for syslog
      ansible.builtin.file:
        path: /var/log/fail2ban.log
        state: touch
        mode: '0640'
        owner: syslog
        group: adm
        modification_time: "preserve"
        access_time: "preserve"
      notify:
        - restart rsyslogd
        - restart fail2ban
    - name: Remove default fail2ban conf.d from Debian/Ubuntu
      ansible.builtin.file:
        path: /etc/fail2ban/jail.d/defaults-debian.conf
        state: absent
      notify: restart fail2ban


  handlers:
    - name: Restart rsyslogd
      ansible.builtin.service:
        name: rsyslog
        state: restarted
        use: service_mgr|default(ansible_service_mgr)
      when: systemd_run_dir.stat.exists and systemd_run_dir.stat.isdir
      listen:
        - restart rsyslogd
    - name: Restart fail2ban
      ansible.builtin.service:
        name: fail2ban
        state: restarted
        use: service_mgr|default(ansible_service_mgr)
      when: fail2ban_enable | bool
      listen:
        - restart fail2ban

- name: Configure monitoring services (Prometheus exporters)
  hosts: all
  remote_user: master
  become: true
  gather_facts: false
  tags: [prometheus_exporters]

  vars:
    node_exporter_version: '1.7.0'
    statsd_exporter_mapping_config: 'files/statsd_mapping.yaml'
    statsd_exporter_relay_address: 'localhost:8125'

  roles:
    - role: node_exporter
      when: node_exporter_enabled
    - role: statsd_exporter
