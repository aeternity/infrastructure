---
- name: Delete Mnesia database
  hosts: all
  remote_user: aeternity

  vars:
    project_root: "{{ ansible_env.HOME }}/node"
    aeternity_bin: "{{ project_root }}/bin/aeternity"
    public_ipv4: "{{ ansible_ec2_public_ipv4|default(ansible_ssh_host)|default(ansible_host)|default(inventory_hostname) }}"
    datadog_api_key: "{{ lookup('hashi_vault', 'secret=secret/datadog/deploy:api_key') }}"
    datadog_app_key: "{{ lookup('hashi_vault', 'secret=secret/datadog/deploy:app_key') }}"

  tasks:
    - block:
      - name: Get nodes status
        uri:
          url: "http://{{ item }}:{{ node_config.http.external.port | default('3013') }}/v2/status"
        register: hosts_status
        loop: "{{ play_hosts }}"
        delegate_to: localhost

      - name: Fail if no synced node found
        fail:
          msg: No synced node
        delegate_to: localhost
        when: >
          hosts_status.results
          | map(attribute='json')
          | selectattr('sync_progress', 'equalto', 100)
          | list
          | length == 0

      - name: Send Datadog event
        datadog_event:
          host: "{{ public_ipv4 }}"
          alert_type: success
          title: Reset mnesia database
          text: "Synced node found"
          api_key: "{{ datadog_api_key }}"
          app_key: "{{ datadog_app_key }}"
        when:
          - datadog_api_key != ""
          - datadog_app_key != ""
        connection: local
      rescue:
        - name: Send Datadog event
          datadog_event:
            host: "{{ public_ipv4 }}"
            alert_type: error
            title: Reset mnesia database
            text: "No synced node found"
            api_key: "{{ datadog_api_key }}"
            app_key: "{{ datadog_app_key }}"
          when:
            - datadog_api_key != ""
            - datadog_app_key != ""
          connection: local
        - name: Fail the playbook
          fail:
            msg: "No synced node found"
          when: true
      run_once: true

    - name: Get node status
      uri:
        url: "http://localhost:{{ node_config.http.external.port | default('3013') }}/v2/status"
      register: status

    - name: Reset mnesia database
      block:
        - name: Stop aeternity daemon
          command: "{{ aeternity_bin }} stop"

        - name:  Delete local database ({{ project_root }}/data/mnesia)
          file:
            path: "{{ project_root }}/data/mnesia"
            state: absent
          when: additional_storage is not defined or not additional_storage

        - name: Delete local database ({{ node_config.chain.db_path }})
          file:
            path: "{{ node_config.chain.db_path }}"
            state: absent
          when:
            - additional_storage is defined
            - additional_storage

        - name: Start aeternity daemon
          command: "{{ aeternity_bin }} start"

      when: status.json.sync_progress | int == 100
      run_once: "{{ status.json.sync_progress | int == 100 }}"
