---
# Playbook used create mnesia snapshoot and upload it to S3

- name: Backup, archive and download Mnesia database
  hosts: "{{ ansible_play_hosts | last }}"
  remote_user: aeternity
  tasks:
    - name: Include configuration variables
      include_vars: tasks/config.yml

    - name: "Load a variable files for environment: {{ env }}"
      include_vars: "{{ item }}"
      with_first_found:
        - "../vars/aeternity/{{ env }}.yml"
      tags: [config, node_config]

    - name: Stop node
      command: "/bin/true"
      changed_when: true
      notify: "stop aeternity daemon"

    - meta: flush_handlers

    - name: Archive Mnesia Directory
      archive:
        format: "{{ format }}"
        path: "{{ project_root }}/{{ node_config.chain.db_path }}"
        dest: /tmp/{{ backup_archive_filename }}

    - name: Upload backup to S3 bucket
      aws_s3:
        bucket: "{{ backup_bucket }}"
        object: "{{ backup_archive_filename }}"
        src: /tmp/{{ backup_archive_filename }}
        mode: put
        aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env','AWS_SESSION_TOKEN') }}"

    - name: Upload backup to S3 bucket latest
      aws_s3:
        bucket: "{{ backup_bucket }}"
        object: "{{ backup_archive_filename_latest }}"
        src: /tmp/{{ backup_archive_filename }}
        mode: put
        aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        security_token: "{{ lookup('env','AWS_SESSION_TOKEN') }}"

    - name: Remove Mnesia backups
      file:
        path:  "{{ item }}"
        state: absent
      loop:
        - /tmp/backup
        - /tmp/{{ backup_archive_filename }}

    - name: Start node
      command: "/bin/true"
      changed_when: true
      notify: "start aeternity daemon"

  handlers:
  - import_tasks: tasks/handlers.yml
