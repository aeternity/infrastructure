---
- name: Reset epoch test-net
  hosts: all
  remote_user: epoch
  vars:
    project_root: "{{ ansible_env.HOME }}/node"
  tasks:
    - name: Check if epoch binary exists
      stat:
        path: "{{ project_root }}/bin/epoch"
      register: epoch
      changed_when: false
      failed_when: epoch.stat.exists != True
      tags: [daemon]

    - name: Checking the epoch daemon state
      command: "{{ project_root }}/bin/epoch ping"
      failed_when: no
      register: ping
      when: epoch.stat.exists == True
      tags: [daemon]

    - name: Stopping the epoch deamon
      command: "{{ project_root }}/bin/epoch stop"
      when: epoch.stat.exists == True and ping.stdout == "pong"
      tags: [daemon]

    - name: Fetching the epoch.yaml file contents
      command: "cat {{ project_root }}/epoch.yaml"
      register: cat_output
      tags: [config]

    - name: Setting variebles from file
      set_fact:
        epoch_vars: "{{ cat_output.stdout | from_yaml }}"
      tags: [config]

    - name: Deleting old blockchain
      file:
        path: "{{ project_root }}/{{ epoch_vars.chain.db_path }}/"
        state: absent
      tags: [config]

    - name: Creating new blockchain folder
      file:
        path: "{{ project_root }}/{{ epoch_vars.chain.db_path }}/"
        state: directory
      tags: [config]

    - name: Deleting old log files
      file:
        path: "{{ project_root }}/log/"
        state: absent
      tags: [config]

    - name: Creating new log folder
      file:
        path: "{{ project_root }}/log/"
        state: directory
      tags: [config]

    - name: Starting the epoch deamon
      command: "{{ project_root }}/bin/epoch start"
      when: epoch.stat.exists == True
      tags: [daemon]
