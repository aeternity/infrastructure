---
- name: Aeternity binary exists
  stat:
    path: "{{ aeternity_bin }}"
  register: binary
  changed_when: false

- name: Ping aeternity node
  command: "{{ aeternity_bin }} ping"
  register: ping
  failed_when: no
  changed_when: false
  when: binary.stat.exists

- name: Aeternity db exists
  stat:
    path: "{{ db_path }}/mnesia"
  register: db
  changed_when: false

- name: Check if already migrated
  find:
    paths: "{{ db_path }}/mnesia"
    patterns:
      - "schema.DAT.backup"
      - "schema.DAT.*.backup"
  register: find_results
  when:
    - db.stat.exists

- name: Stop aeternity node
  command: "{{ aeternity_bin }} stop"
  when:
    - binary.stat.exists
    - ping.stdout == "pong"
    - db.stat.exists
    - find_results.files|length == 0

- name: Migarte db schema names
  command: "{{ aeternity_bin }} rename_db {{ db_path }}"
  when:
    - binary.stat.exists
    - db.stat.exists
    - find_results.files|length == 0

# note it needs double start, but the outer playbook also does start after this partial
- name: Start aeternity node after backup
  command: "{{ aeternity_bin }} start"
  when:
    - binary.stat.exists
    - ping.stdout == "pong"
    - db.stat.exists
    - find_results.files|length == 0
